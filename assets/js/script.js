document.addEventListener('DOMContentLoaded', function () {
    // Music button interaction
    const musicButton = document.querySelector('.music-button');
    if (musicButton) {
        musicButton.addEventListener('click', function (e) {
            this.style.transform = 'translateY(-5px) scale(0.95)';
            setTimeout(() => {
                this.style.transform = 'translateY(-3px) scale(1)';
            }, 150);
        });
    }

    // Add sparkle effect on mouse move
    const musicBtnFloat = document.querySelector('.music-btn');
    if (musicBtnFloat) musicBtnFloat.setAttribute('data-tooltip', 'Nghe nh·∫°c');

    const rsvpBtnFloat = document.querySelector('.rsvp-btn');
    if (rsvpBtnFloat) rsvpBtnFloat.setAttribute('data-tooltip', 'G·ª≠i l·ªùi ch√∫c');

    const translateBtn = document.querySelector('.translate-btn');
    if (translateBtn) translateBtn.setAttribute('data-tooltip', 'D·ªãch sang ti·∫øng Anh');

    document.addEventListener('mousemove', function (e) {
        if (Math.random() > 0.95) {
            createSparkle(e.clientX, e.clientY);
        }
    });

    // Add CSS animation for sparkles
    if (!document.querySelector('#sparkle-styles')) {
        const style = document.createElement('style');
        style.id = 'sparkle-styles';
        style.textContent = `
            @keyframes sparkleAnimation {
                0% {
                    opacity: 1;
                    transform: scale(0) rotate(0deg);
                }
                50% {
                    opacity: 1;
                    transform: scale(1) rotate(180deg);
                }
                100% {
                    opacity: 0;
                    transform: scale(0) rotate(360deg);
                }
            }
        `;
        document.head.appendChild(style);
    }

    // Load and display existing messages
    loadMessages();

    // RSVP Form handling
    const rsvpForm = document.getElementById('rsvpForm');
    if (rsvpForm) {
        rsvpForm.addEventListener('submit', function (e) {
            e.preventDefault();
            submitRSVP();
        });
    }

    // Initialize floating button functionality
    const musicBtn = document.querySelector('.music-btn');
    const translateButton = document.querySelector('.translate-btn');
    const rsvpBtn = document.querySelector('.rsvp-btn');
    const backBtn = document.querySelector('#backToTop');

    if (musicBtn) musicBtn.addEventListener('click', toggleMusic);
    if (translateButton) translateButton.addEventListener('click', translatePage);
    if (rsvpBtn) rsvpBtn.addEventListener('click', openRSVPModal);
    if (backBtn) backBtn.addEventListener('click', scrollToTop);

    // Add scroll event listener for back to top button
    window.addEventListener('scroll', function () {
        const backToTop = document.querySelector('#backToTop');
        if (window.scrollY > 300) {
            if (backToTop) backToTop.classList.add('show');
        } else {
            if (backToTop) backToTop.classList.remove('show');
        }
    });

    // Add event listener for Google Maps
    const mapWrapper = document.querySelector('.map-wrapper');
    if (mapWrapper) {
        mapWrapper.addEventListener('click', openInGoogleMaps);
    }

    // Initialize snow effect
    createSnowEffect();

    // Make openInGoogleMaps globally available
    window.openInGoogleMaps = openInGoogleMaps;
});

// Sparkle effect function (single definition)
function createSparkle(x, y) {
    const sparkle = document.createElement('div');
    sparkle.style.position = 'fixed';
    sparkle.style.left = x + 'px';
    sparkle.style.top = y + 'px';
    sparkle.style.width = '4px';
    sparkle.style.height = '4px';
    sparkle.style.background = '#5dade2'; // Updated to match blue theme
    sparkle.style.borderRadius = '50%';
    sparkle.style.pointerEvents = 'none';
    sparkle.style.zIndex = '1000';
    sparkle.style.animation = 'sparkleAnimation 1s ease-out forwards';

    document.body.appendChild(sparkle);

    setTimeout(() => {
        if (sparkle.parentNode) {
            sparkle.parentNode.removeChild(sparkle);
        }
    }, 1000);
}

// RSVP Modal functions
function openRSVPModal() {
    const modal = document.getElementById('rsvpModal');
    modal.classList.add('active');
    document.body.style.overflow = 'hidden';
}

function closeRSVPModal() {
    const modal = document.getElementById('rsvpModal');
    modal.classList.remove('active');
    document.body.style.overflow = 'auto';
}

// Click outside modal to close
document.addEventListener('click', function (e) {
    const modal = document.getElementById('rsvpModal');
    if (e.target === modal) {
        closeRSVPModal();
    }
});

// Messages handling
function saveMessage(name, message) {
    let messages = JSON.parse(localStorage.getItem('graduationMessages') || '[]');

    const newMessage = {
        id: Date.now(),
        name: name,
        message: message,
        timestamp: new Date().toLocaleString('vi-VN')
    };

    messages.unshift(newMessage);
    localStorage.setItem('graduationMessages', JSON.stringify(messages));

    displayMessages(messages);
    showMessagesSection();
}

function loadMessages() {
    const messages = JSON.parse(localStorage.getItem('graduationMessages') || '[]');
    if (messages.length > 0) {
        displayMessages(messages);
        showMessagesSection();
    }
}

function displayMessages(messages) {
    const messagesList = document.getElementById('messagesList');

    if (messages.length === 0) {
        messagesList.innerHTML = '<p style="text-align: center; color: #7f8c8d; font-style: italic;">Ch∆∞a c√≥ l·ªùi ch√∫c n√†o. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n!</p>';
        return;
    }

    messagesList.innerHTML = messages.map(msg => {
        let attendanceIcon = '';
        let attendanceText = '';

        if (msg.attendance) {
            switch (msg.attendance) {
                case 'yes':
                    attendanceIcon = '‚úÖ';
                    attendanceText = 'S·∫Ω tham d·ª±';
                    break;
                case 'maybe':
                    attendanceIcon = '‚ùì';
                    attendanceText = 'C√≥ th·ªÉ tham d·ª±';
                    break;
                case 'no':
                    attendanceIcon = '‚ùå';
                    attendanceText = 'Kh√¥ng th·ªÉ tham d·ª±';
                    break;
            }
        }

        return `
        <div class="message-item">
            <div class="message-author">üíù ${escapeHtml(msg.name)} ${attendanceIcon ? `<span class="attendance-status">${attendanceIcon} ${attendanceText}</span>` : ''}</div>
            ${msg.message ? `<div class="message-text">"${escapeHtml(msg.message)}"</div>` : ''}
            <div class="message-time">${msg.timestamp || new Date(msg.timestamp).toLocaleString('vi-VN')}</div>
        </div>
    `;
    }).join('');
}

function showMessagesSection() {
    const messagesSection = document.getElementById('messagesSection');
    messagesSection.classList.add('show');
}

function escapeHtml(text) {
    const map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#039;'
    };
    return text.replace(/[&<>"']/g, function (m) { return map[m]; });
}

function showNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #5dade2, #2980b9);
        color: white;
        padding: 15px 25px;
        border-radius: 25px;
        box-shadow: 0 5px 15px rgba(93, 173, 226, 0.4);
        z-index: 1001;
        font-family: 'Playfair Display', serif;
        font-weight: 600;
        opacity: 0;
        transform: translateX(100px);
        transition: all 0.3s ease;
    `;
    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.style.opacity = '1';
        notification.style.transform = 'translateX(0)';
    }, 100);

    setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(100px)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Scroll to top function
function scrollToTop() {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
    showNotification('‚¨ÜÔ∏è ƒê√£ v·ªÅ ƒë·∫ßu trang', 'info');
}

// Music toggle functionality
let isPlaying = false;
let audio = null;

function toggleMusic() {
    const musicButton = document.querySelector('.music-btn');

    if (!audio) {
        audio = document.getElementById('invitationMusic');
        if (!audio) {
            showNotification('‚ùå Kh√¥ng t√¨m th·∫•y file nh·∫°c', 'error');
            return;
        }
        audio.loop = true;
        audio.volume = 0.6;
    }

    if (!isPlaying) {
        audio.play().then(() => {
            musicButton.innerHTML = 'üéµ‚è∏Ô∏è';
            musicButton.style.color = '#5dade2';
            isPlaying = true;
            showNotification('üéµ Nh·∫°c ƒë√£ ƒë∆∞·ª£c b·∫≠t', 'success');
        }).catch((error) => {
            console.error('Error playing audio:', error);
            showNotification('‚ùå Kh√¥ng th·ªÉ ph√°t nh·∫°c', 'error');
        });
    } else {
        audio.pause();
        musicButton.innerHTML = 'üéµ';
        musicButton.style.color = '#2c3e50';
        isPlaying = false;
        showNotification('üéµ Nh·∫°c ƒë√£ t·∫Øt', 'info');
    }
}

// Translation functionality
let isEnglish = false;

function translatePage() {
    const translateButton = document.querySelector('.translate-btn');

    if (!isEnglish) {
        translateToEnglish();
        translateButton.innerHTML = 'üåêEN';
        translateButton.style.color = '#5dade2';
        translateButton.setAttribute('data-tooltip', 'Translate to Vietnamese');
        isEnglish = true;
        showNotification('üåê Translated to English', 'success');
    } else {
        translateToVietnamese();
        translateButton.innerHTML = 'üåêVI';
        translateButton.style.color = '#2c3e50';
        translateButton.setAttribute('data-tooltip', 'D·ªãch sang ti·∫øng Anh');
        isEnglish = false;
        showNotification('üåê ƒê√£ d·ªãch sang Ti·∫øng Vi·ªát', 'success');
    }
}

// Translate to English function
function translateToEnglish() {
    // Main invitation card
    const name = document.querySelector('.name');
    if (name) name.textContent = 'Danh Kieu Han';

    const title = document.querySelector('.title');
    if (title) title.textContent = 'Graduation Ceremony';

    const details = document.querySelectorAll('.details p');
    if (details.length >= 2) {
        details[0].innerHTML = '<strong>üìÖ Time:</strong> 1:30 PM, August 22, 2025';
        details[1].innerHTML = '<strong>üìç Location:</strong> Nam Can Tho University Hall';
    }

    const specialMessage = document.querySelector('.special-message');
    if (specialMessage) specialMessage.textContent = 'Your presence would be a great honor!';

    const musicButtonSpan = document.querySelector('.music-button span:last-child');
    if (musicButtonSpan) musicButtonSpan.textContent = 'Click to play music';

    // Academic section
    const sectionTitle = document.querySelector('.section-title');
    if (sectionTitle) sectionTitle.textContent = 'Academic Journey';

    // Timeline items
    const timelineTitles = document.querySelectorAll('.timeline-title');
    const timelineDescs = document.querySelectorAll('.timeline-description');

    if (timelineTitles.length >= 3) {
        timelineTitles[0].textContent = 'üéì Nam Can Tho University';
        timelineTitles[1].textContent = 'üíº Internship & Projects';
        timelineTitles[2].textContent = 'üå± Foundation Years';
    }

    if (timelineDescs.length >= 3) {
        timelineDescs[0].textContent = 'Information Technology Major';
        timelineDescs[1].textContent = 'Internship at tech companies and personal projects';
        timelineDescs[2].textContent = 'Building fundamental knowledge and skills';
    }

    // Timeline highlights
    const timelineHighlights = document.querySelectorAll('.timeline-highlight');
    const highlightTexts = [
        '<strong>GPA:</strong> 3.3/4.0 | <strong>Grade:</strong> Excellent',
        '‚Ä¢ Learning and developing web applications with PHP, C#<br>‚Ä¢ Participating in graduation thesis<br>‚Ä¢ Completing English certificate equivalent to VStep (Overall 7.5)',
        '‚Ä¢ Completing foundation courses with high grades<br>‚Ä¢ Joining Programming Club<br>‚Ä¢ Learning IT specialized English'
    ];
    timelineHighlights.forEach((highlight, index) => {
        if (highlight && highlightTexts[index]) {
            highlight.innerHTML = highlightTexts[index];
        }
    });

    // Gallery section
    const galleryTitle = document.querySelector('.gallery-title');
    if (galleryTitle) galleryTitle.textContent = 'Memories Collection';

    // Photo captions
    const photoCaptions = document.querySelectorAll('.photo-description');
    const captionTexts = [
        'First days at university, full of excitement and eagerness to learn.',
        'A bit disappointed with the learning environment, but it\'s okay, I\'m fine =))).',
        'Year of ups and downs, pressure and first projects.',
        'Lucky to experience reality at FSoft Saigon and TMA Solutions, complete thesis and prepare for new journey.',
        'Present Kieu Han, a bit unstable and tired but still trying every day.',
        'Kieu Han will continue to pursue IT career, constantly learning and developing herself.',
        'Wonderful friends and unforgettable memories in 4 university years.',
        'Special moments, memorable achievements and valuable experiences.'
    ];
    photoCaptions.forEach((caption, index) => {
        if (caption && captionTexts[index]) {
            caption.textContent = captionTexts[index];
        }
    });

    const galleryNote = document.querySelector('.gallery-note');
    if (galleryNote) galleryNote.textContent = 'üåü 4-year university memory collection - From freshman to bachelor!';

    // Save the date section
    const saveTitle = document.querySelector('.save-date-title');
    if (saveTitle) saveTitle.textContent = 'Event Information';

    const saveDateContents = document.querySelectorAll('.save-date-content');
    if (saveDateContents.length >= 2) {
        saveDateContents[0].textContent = 'Graduation ceremony marks the end of a learning journey and the beginning of new dreams.';
        saveDateContents[1].textContent = 'Your presence will make this day more meaningful!';
    }

    const dateHighlight = document.querySelector('.date-highlight');
    if (dateHighlight) dateHighlight.textContent = 'üóìÔ∏è August 22, 2025 - 1:30 PM';

    // Location info
    const locationTitle = document.querySelector('.location-title');
    if (locationTitle) locationTitle.textContent = 'üìç Event Location';

    const locationText = document.querySelector('.location-text');
    if (locationText) {
        locationText.innerHTML = `
            <strong>Nam Can Tho University Hall</strong><br>
            üìÆ Address: 168 Nguyen Van Cu Noi Dai, An Binh, Ninh Kieu, Can Tho, Vietnam<br>
            üìû Hotline: 0292.3.872.745<br>
            üåê Website: <a href="https://ntu.edu.vn" target="_blank">ntu.edu.vn</a>
        `;
    }

    const directionsInfo = document.querySelector('.directions-info');
    if (directionsInfo) {
        directionsInfo.innerHTML = `
            <p>üöó <strong>Directions:</strong></p>
            <ul>
                <li>From Can Tho center: Follow Nguyen Van Cu Noi Dai road</li>
                <li>The university is located at 168 Nguyen Van Cu Noi Dai, An Binh</li>
            </ul>
        `;
    }

    const mapClickHint = document.querySelector('.map-click-hint');
    if (mapClickHint) mapClickHint.textContent = 'üìç Click to open Google Maps';

    const rsvpButtonSpans = document.querySelectorAll('.rsvp-button span');
    if (rsvpButtonSpans.length >= 2) rsvpButtonSpans[1].textContent = 'Will you attend?';

    // Messages section
    const messagesTitle = document.querySelector('.messages-title');
    if (messagesTitle) messagesTitle.textContent = 'Wishes from Friends';

    // RSVP Modal
    const modalTitle = document.querySelector('.modal-title');
    if (modalTitle) modalTitle.textContent = 'Will you attend?';

    const formLabels = document.querySelectorAll('.form-label');
    if (formLabels.length >= 2) {
        formLabels[0].textContent = 'Your Name:';
        formLabels[1].textContent = 'Your Wishes:';
    }

    const guestNameInput = document.getElementById('guestName');
    if (guestNameInput) guestNameInput.placeholder = 'Enter your name';

    const guestMessageInput = document.getElementById('guestMessage');
    if (guestMessageInput) guestMessageInput.placeholder = 'Leave good wishes for Kieu Han...';

    // Attendance options
    const optionLabel = document.querySelector('.option-label');
    if (optionLabel) optionLabel.textContent = 'Will you attend?';

    const attendLabels = document.querySelectorAll('.radio-option label');
    const attendTexts = [
        'üéâ Yes, I will attend!',
        'ü§î Maybe, plan B',
        'üò¢ Sorry, I can\'t attend!'
    ];
    attendLabels.forEach((label, index) => {
        if (label && attendTexts[index]) {
            label.textContent = attendTexts[index];
        }
    });

    // Modal buttons
    const modalButtons = document.querySelectorAll('.modal-buttons button');
    if (modalButtons.length >= 2) {
        modalButtons[0].textContent = 'Send Wishes';
        modalButtons[1].textContent = 'Close';
    }

    // Footer
    const footerCouples = document.querySelectorAll('#footerCouple');
    if (footerCouples.length >= 2) {
        footerCouples[0].textContent = 'Thank you!'; // First one (header)
        footerCouples[1].textContent = 'Kieu Han';   // Second one (in footer-text)
    }

    const footerMessageEn = document.getElementById('footerMessageEn');
    const footerMessageVn = document.getElementById('footerMessageVn');
    if (footerMessageEn && footerMessageVn) {
        footerMessageEn.style.display = 'block';
        footerMessageVn.style.display = 'none';
    }

    const footerShareText = document.getElementById('footerShareText');
    if (footerShareText) footerShareText.textContent = 'Share the joy';

    const footerCopyright = document.getElementById('footerCopyright');
    if (footerCopyright) {
        footerCopyright.innerHTML = 'Designed by Kieu Han with üíô for my graduation celebration <br>Contact me: 0945255664';
    }
}

// Translate to Vietnamese function
function translateToVietnamese() {
    // Main invitation card
    const name = document.querySelector('.name');
    if (name) name.textContent = ' Danh Ki·ªÅu H√¢n';

    const title = document.querySelector('.title');
    if (title) title.textContent = 'L·ªÖ t·ªët nghi·ªáp';

    const details = document.querySelectorAll('.details p');
    if (details.length >= 2) {
        details[0].innerHTML = '<strong>üìÖ Th·ªùi gian:</strong> 1h30, ng√†y 22/8/2025';
        details[1].innerHTML = '<strong>üìç ƒê·ªãa ƒëi·ªÉm:</strong> H·ªôi tr∆∞·ªùng Tr∆∞·ªùng ƒê·∫°i h·ªçc Nam C·∫ßn Th∆°';
    }

    const specialMessage = document.querySelector('.special-message');
    if (specialMessage) specialMessage.textContent = 'S·ª± hi·ªán di·ªán c·ªßa b·∫°n l√† ni·ªÅm vinh d·ª± l·ªõn lao!';

    const musicButtonSpan = document.querySelector('.music-button span:last-child');
    if (musicButtonSpan) musicButtonSpan.textContent = 'Click v√†o ƒë·ªÉ ƒë·ªÉ nghe nh·∫°c';

    // Academic section
    const sectionTitle = document.querySelector('.section-title');
    if (sectionTitle) sectionTitle.textContent = 'Qu√° tr√¨nh h·ªçc t·∫≠p';

    // Timeline items
    const timelineTitles = document.querySelectorAll('.timeline-title');
    const timelineDescs = document.querySelectorAll('.timeline-description');

    if (timelineTitles.length >= 3) {
        timelineTitles[0].textContent = 'üéì ƒê·∫°i h·ªçc Nam C·∫ßn Th∆°';
        timelineTitles[1].textContent = 'üíº Th·ª±c t·∫≠p & D·ª± √°n';
        timelineTitles[2].textContent = 'üå± Nh·ªØng nƒÉm ƒë·∫ßu';
    }

    if (timelineDescs.length >= 3) {
        timelineDescs[0].textContent = 'Chuy√™n ng√†nh C√¥ng ngh·ªá Th√¥ng tin';
        timelineDescs[1].textContent = 'Th·ª±c t·∫≠p t·∫°i c√¥ng ty c√¥ng ngh·ªá v√† th·ª±c hi·ªán c√°c d·ª± √°n c√° nh√¢n';
        timelineDescs[2].textContent = 'X√¢y d·ª±ng n·ªÅn t·∫£ng ki·∫øn th·ª©c v√† k·ªπ nƒÉng';
    }

    // Timeline highlights
    const timelineHighlights = document.querySelectorAll('.timeline-highlight');
    const highlightTexts = [
        '<strong>GPA:</strong> 3.3/4.0 | <strong>X·∫øp lo·∫°i:</strong> Gi·ªèi',
        '‚Ä¢ H·ªçc t·∫≠p v√† ph√°t tri·ªÉn ·ª©ng d·ª•ng web v·ªõi c√°c ng√¥n ng·ªØ PHP, C#<br>‚Ä¢ Tham gia th·ª±c hi·ªán kho√° lu·∫≠n t·ªët nghi·ªáp<br>‚Ä¢ Ho√†n th√†nh ch·ª©ng ch·ªâ ti·∫øng Anh t∆∞∆°ng ƒë∆∞∆°ng VStep (Overal 7.5)',
        '‚Ä¢ Ho√†n th√†nh c√°c m√¥n c∆° s·ªü v·ªõi kh√° cao<br>‚Ä¢ Tham gia c√¢u l·∫°c b·ªô L·∫≠p tr√¨nh<br>‚Ä¢ H·ªçc ti·∫øng Anh chuy√™n ng√†nh IT'
    ];
    timelineHighlights.forEach((highlight, index) => {
        if (highlight && highlightTexts[index]) {
            highlight.innerHTML = highlightTexts[index];
        }
    });

    // Gallery section
    const galleryTitle = document.querySelector('.gallery-title');
    if (galleryTitle) galleryTitle.textContent = 'B·ªô s∆∞u t·∫≠p k·ª∑ ni·ªám';

    // Photo captions
    const photoCaptions = document.querySelectorAll('.photo-description');
    const captionTexts = [
        'Nh·ªØng ng√†y ƒë·∫ßu b∆∞·ªõc ch√¢n v√†o ƒë·∫°i h·ªçc, tr√†n ƒë·∫ßy h·ª©ng kh·ªüi v√† khao kh√°t h·ªçc h·ªèi.',
        'H∆°i v·ª° m·ªông b·ªüi m√¥i tr∆∞·ªùng h·ªçc t·∫≠p, nh∆∞ng kh√¥ng sao, I\'m fine =))).',
        'NƒÉm c·ªßa nh·ªØng ng√†y ch√™nh v√™nh, √°p l·ª±c v√† nh·ªØng d·ª± √°n ƒë·∫ßu ti√™n.',
        'May m·∫Øn ƒë∆∞·ª£c ƒëi tr·∫£i nghi·ªám th·ª±c t·∫ø t·∫°i FSoft S√†i G√≤n v√† TMA Solutions, ho√†n th√†nh lu·∫≠n vƒÉn v√† chu·∫©n b·ªã cho h√†nh tr√¨nh m·ªõi.',
        'Ki·ªÅu H√¢n c·ªßa hi·ªán t·∫°i, c√≥ ch√∫t ch√™nh v√™nh v√† m·ªèi m·ªát nh∆∞ng v·∫´n c·ªë g·∫Øng t·ª´ng ng√†y.',
        'Ki·ªÅu H√¢n v·∫´n s·∫Ω c·ªë g·∫Øng ti·∫øp t·ª•c con ƒë∆∞·ªùng IT, kh√¥ng ng·ª´ng h·ªçc h·ªèi v√† ph√°t tri·ªÉn b·∫£n th√¢n.',
        'Nh·ªØng ng∆∞·ªùi b·∫°n tuy·ªát v·ªùi v√† k·ª∑ ni·ªám kh√¥ng th·ªÉ qu√™n trong 4 nƒÉm ƒë·∫°i h·ªçc.',
        'Nh·ªØng kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát, th√†nh t·ª±u ƒë√°ng nh·ªõ v√† tr·∫£i nghi·ªám qu√Ω gi√°.'
    ];
    photoCaptions.forEach((caption, index) => {
        if (caption && captionTexts[index]) {
            caption.textContent = captionTexts[index];
        }
    });

    const galleryNote = document.querySelector('.gallery-note');
    if (galleryNote) galleryNote.textContent = 'üåü B·ªô s∆∞u t·∫≠p k·ª∑ ni·ªám 4 nƒÉm ƒë·∫°i h·ªçc - T·ª´ t√¢n sinh vi√™n ƒë·∫øn c·ª≠ nh√¢n!';

    // Save the date section
    const saveTitle = document.querySelector('.save-date-title');
    if (saveTitle) saveTitle.textContent = 'Th√¥ng tin v·ªÅ bu·ªïi l·ªÖ';

    const saveDateContents = document.querySelectorAll('.save-date-content');
    if (saveDateContents.length >= 2) {
        saveDateContents[0].textContent = 'L·ªÖ t·ªët nghi·ªáp l√† kho·∫£nh kh·∫Øc ƒë√°nh d·∫•u s·ª± k·∫øt th√∫c c·ªßa m·ªôt h√†nh tr√¨nh h·ªçc t·∫≠p v√† b·∫Øt ƒë·∫ßu c·ªßa nh·ªØng ∆∞·ªõc m∆° m·ªõi.';
        saveDateContents[1].textContent = 'S·ª± hi·ªán di·ªán c·ªßa b·∫°n s·∫Ω l√†m cho ng√†y n√†y tr·ªü n√™n √Ω nghƒ©a h∆°n!';
    }

    const dateHighlight = document.querySelector('.date-highlight');
    if (dateHighlight) dateHighlight.textContent = 'üóìÔ∏è 22 th√°ng 8, 2025 - 1:30 PM';

    // Location info
    const locationTitle = document.querySelector('.location-title');
    if (locationTitle) locationTitle.textContent = 'üìç ƒê·ªãa ƒëi·ªÉm t·ªï ch·ª©c';

    const locationText = document.querySelector('.location-text');
    if (locationText) {
        locationText.innerHTML = `
            <strong>H·ªôi tr∆∞·ªùng Tr∆∞·ªùng ƒê·∫°i h·ªçc Nam C·∫ßn Th∆°</strong><br>
            üìÆ ƒê·ªãa ch·ªâ: S·ªë 168 Nguy·ªÖn VƒÉn C·ª´ N·ªëi D√†i, An B√¨nh, Ninh Ki·ªÅu, C·∫ßn Th∆°, Vi·ªát Nam<br>
            üìû Hotline: 0292.3.872.745<br>
            üåê Website: <a href="https://ntu.edu.vn" target="_blank">ntu.edu.vn</a>
        `;
    }

    const directionsInfo = document.querySelector('.directions-info');
    if (directionsInfo) {
        directionsInfo.innerHTML = `
            <p>üöó <strong>H∆∞·ªõng d·∫´n ƒëi l·∫°i:</strong></p>
            <ul>
                <li>T·ª´ trung t√¢m C·∫ßn Th∆°: ƒêi theo ƒë∆∞·ªùng Nguy·ªÖn VƒÉn C·ª´ N·ªëi D√†i</li>
                <li>Tr∆∞·ªùng n·∫±m t·∫°i s·ªë 168 Nguy·ªÖn VƒÉn C·ª´ N·ªëi D√†i, An B√¨nh</li>
            </ul>
        `;
    }

    const mapClickHint = document.querySelector('.map-click-hint');
    if (mapClickHint) mapClickHint.textContent = 'üìç Click ƒë·ªÉ m·ªü Google Maps';

    const rsvpButtonSpans = document.querySelectorAll('.rsvp-button span');
    if (rsvpButtonSpans.length >= 2) rsvpButtonSpans[1].textContent = 'B·∫°n s·∫Ω ƒë·∫øn d·ª± ch·ª©?';

    // Messages section
    const messagesTitle = document.querySelector('.messages-title');
    if (messagesTitle) messagesTitle.textContent = 'L·ªùi ch√∫c t·ª´ b·∫°n b√®';

    // RSVP Modal
    const modalTitle = document.querySelector('.modal-title');
    if (modalTitle) modalTitle.textContent = 'B·∫°n s·∫Ω ƒë·∫øn d·ª± ch·ª©?';

    const formLabels = document.querySelectorAll('.form-label');
    if (formLabels.length >= 2) {
        formLabels[0].textContent = 'T√™n c·ªßa b·∫°n:';
        formLabels[1].textContent = 'L·ªùi ch√∫c c·ªßa b·∫°n:';
    }

    const guestNameInput = document.getElementById('guestName');
    if (guestNameInput) guestNameInput.placeholder = 'Nh·∫≠p t√™n c·ªßa b·∫°n';

    const guestMessageInput = document.getElementById('guestMessage');
    if (guestMessageInput) guestMessageInput.placeholder = 'H√£y ƒë·ªÉ l·∫°i l·ªùi ch√∫c t·ªët ƒë·∫πp cho Ki·ªÅu H√¢n...';

    // Attendance options
    const optionLabel = document.querySelector('.option-label');
    if (optionLabel) optionLabel.textContent = 'B·∫°n s·∫Ω ƒë·∫øn d·ª± ch·ª©?';

    const attendLabels = document.querySelectorAll('.radio-option label');
    const attendTexts = [
        'üéâ S·∫Ω ƒë·∫øn!',
        'ü§î S·∫Ω ƒë·∫øn nh∆∞ng ph∆∞∆°ng √°n 2',
        'üò¢ M√¨nh b·∫≠n m·∫•t r·ªìi, kh√¥ng tham gia ƒë∆∞·ª£c!'
    ];
    attendLabels.forEach((label, index) => {
        if (label && attendTexts[index]) {
            label.textContent = attendTexts[index];
        }
    });

    // Modal buttons
    const modalButtons = document.querySelectorAll('.modal-buttons button');
    if (modalButtons.length >= 2) {
        modalButtons[0].textContent = 'G·ª≠i l·ªùi ch√∫c';
        modalButtons[1].textContent = 'ƒê√≥ng';
    }

    // Footer
    const footerCouples = document.querySelectorAll('#footerCouple');
    if (footerCouples.length >= 2) {
        footerCouples[0].textContent = 'C·∫£m ∆°n b·∫°n!'; // First one (header)
        footerCouples[1].textContent = 'Ki·ªÅu H√¢n';    // Second one (in footer-text)
    }

    const footerMessageEn = document.getElementById('footerMessageEn');
    const footerMessageVn = document.getElementById('footerMessageVn');
    if (footerMessageEn && footerMessageVn) {
        footerMessageEn.style.display = 'none';
        footerMessageVn.style.display = 'block';
    }

    const footerShareText = document.getElementById('footerShareText');
    if (footerShareText) footerShareText.textContent = 'Chia s·∫ª ni·ªÅm vui';

    const footerCopyright = document.getElementById('footerCopyright');
    if (footerCopyright) {
        footerCopyright.innerHTML = 'Thi·∫øt k·∫ø b·ªüi Ki·ªÅu H√¢n v·ªõi üíô cho l·ªÖ t·ªët nghi·ªáp c·ªßa m√¨nh <br>Li√™n h·ªá v·ªõi t√¥i: 0945255664';
    }
}

// Scroll to home (invitation card) functionality
function scrollToHome() {
    const invitationCard = document.querySelector('.invitation-card');
    if (invitationCard) {
        invitationCard.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
        showNotification('üè† ƒê√£ v·ªÅ trang ch·ªß', 'success');
    }
}

// Enhanced RSVP form submission
function submitRSVP() {
    const name = document.getElementById('guestName').value.trim();
    const message = document.getElementById('guestMessage').value.trim();
    const attendance = document.querySelector('input[name="attendance"]:checked');

    if (!name) {
        showNotification('‚ùå Vui l√≤ng nh·∫≠p t√™n c·ªßa b·∫°n', 'error');
        return;
    }

    if (!attendance) {
        showNotification('‚ùå Vui l√≤ng ch·ªçn t√¨nh tr·∫°ng tham d·ª±', 'error');
        return;
    }

    const rsvpData = {
        name: name,
        message: message,
        attendance: attendance.value,
        timestamp: new Date().toISOString()
    };

    let messages = JSON.parse(localStorage.getItem('graduationMessages') || '[]');
    messages.push(rsvpData);
    localStorage.setItem('graduationMessages', JSON.stringify(messages));

    let successMessage = '';
    switch (attendance.value) {
        case 'yes':
            successMessage = 'üéâ C·∫£m ∆°n b·∫°n ƒë√£ x√°c nh·∫≠n tham d·ª±!';
            break;
        case 'maybe':
            successMessage = 'ü§î C·∫£m ∆°n! Hy v·ªçng b·∫°n c√≥ th·ªÉ tham d·ª± ƒë∆∞·ª£c';
            break;
        case 'no':
            successMessage = 'üò¢ Ti·∫øc qu√°! C·∫£m ∆°n b·∫°n ƒë√£ ph·∫£n h·ªìi';
            break;
    }
    showNotification(successMessage, 'success');

    document.getElementById('guestName').value = '';
    document.getElementById('guestMessage').value = '';
    document.querySelectorAll('input[name="attendance"]').forEach(radio => radio.checked = false);
    closeRSVPModal();

    loadMessages();
}

// Snow Effect Function
function createSnowEffect() {
    const snowContainer = document.getElementById('snowContainer');
    if (!snowContainer) return;

    const snowflakes = ['‚ùÑ', '‚ùÖ', '‚ùÜ', '‚úª', '‚úº', '‚ùã'];

    function createSnowflake() {
        const snowflake = document.createElement('div');
        snowflake.classList.add('snowflake');
        snowflake.innerHTML = snowflakes[Math.floor(Math.random() * snowflakes.length)];
        snowflake.style.left = Math.random() * 100 + '%';
        const duration = Math.random() * 5 + 3;
        snowflake.style.animationDuration = duration + 's';
        snowflake.style.animationDelay = Math.random() * 2 + 's';
        snowflake.style.opacity = Math.random() * 0.8 + 0.2;
        snowContainer.appendChild(snowflake);
        setTimeout(() => {
            if (snowflake.parentNode) {
                snowflake.parentNode.removeChild(snowflake);
            }
        }, (duration + 2) * 1000);
    }

    setInterval(createSnowflake, 300);

    for (let i = 0; i < 50; i++) {
        setTimeout(createSnowflake, Math.random() * 5000);
    }
}

// Function to open Google Maps with pre-pinned location
function openInGoogleMaps() {
    const address = "Tr∆∞·ªùng ƒê·∫°i h·ªçc Nam C·∫ßn Th∆°, 168 Nguy·ªÖn VƒÉn C·ª´ N·ªëi D√†i, An B√¨nh, Ninh Ki·ªÅu, C·∫ßn Th∆°";
    const simpleUrl = `https://www.google.com/maps/place/${encodeURIComponent(address)}`;
    const detailedUrl = `https://www.google.com/maps/search/${encodeURIComponent(address)}/@10.034070690005616,105.75997897587886,17z`;

    try {
        showNotification('üó∫Ô∏è ƒêang m·ªü Google Maps...');
        const newWindow = window.open(detailedUrl, '_blank', 'noopener,noreferrer');
        if (!newWindow || newWindow.closed) {
            setTimeout(() => {
                window.open(simpleUrl, '_blank', 'noopener,noreferrer');
            }, 100);
        }
    } catch (error) {
        window.location.href = simpleUrl;
    }
}
